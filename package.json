{
  "name": "react-template-ts",
  "author": "Lucas F. Simoni <lucasfrsi@gmail.com> (https://lucasfrsi.com)",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": ">=16.14.0 <17"
  },
  "scripts": {
    "// ---DEVELOPMENT---": "",
    "start": "webpack serve --progress --node-env development",
    "// ---PRODUCTION---": "",
    "build": "webpack --node-env production",
    "serve": "npx serve -s ./build -p 8080",
    "start:prod": "npm run build && npm run serve",
    "// ---LINTING---": "",
    "eslint": "eslint --ext .ts,.tsx,.js,.jsx .",
    "eslint:fix": "npm run eslint -- --fix",
    "stylelint": "stylelint './src/**/*.{ts,tsx,js,jsx}'",
    "stylelint:fix": "npm run stylelint -- --fix'",
    "lint": "npm run eslint",
    "// ---FORMATTING---": "",
    "prettier": "prettier --check .",
    "prettier:fix": "prettier --write .",
    "// ---TESTING---": "",
    "test": "jest",
    "test:ci": "jest --watchAll=false --ci --coverage",
    "test:snap": "jest -u",
    "test:watch": "jest --watch",
    "// ---UTILS---": "",
    "bundle:analyze": "webpack --node-env production --analyze",
    "check:ts": "tsc --noEmit",
    "clean:build": "rm -rf build",
    "clean:coverage": "rm -rf coverage",
    "clean:node": "rm -rf node_modules",
    "clean": "rm -rf build coverage node_modules",
    "// ---HUSKY---": "",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@babel/core": "^7.17.5",
    "@babel/preset-env": "^7.16.11",
    "@babel/preset-react": "^7.16.7",
    "@babel/preset-typescript": "^7.16.7",
    "@commitlint/cli": "^16.2.1",
    "@commitlint/config-conventional": "^16.2.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.4",
    "@testing-library/jest-dom": "^5.16.2",
    "@testing-library/react": "^12.1.4",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.4.1",
    "@types/node": "^17.0.21",
    "@types/prop-types": "^15.7.4",
    "@types/react": "^17.0.40",
    "@types/react-dom": "^17.0.13",
    "@types/react-redux": "^7.1.23",
    "@types/redux-logger": "^3.0.9",
    "@types/styled-components": "^5.1.24",
    "@types/webpack": "^5.28.0",
    "@types/webpack-env": "^1.16.3",
    "@typescript-eslint/eslint-plugin": "^5.14.0",
    "@typescript-eslint/parser": "^5.14.0",
    "babel-loader": "^8.2.3",
    "babel-plugin-styled-components": "^2.0.6",
    "commitizen": "^4.2.4",
    "compression-webpack-plugin": "^9.2.0",
    "core-js": "^3.21.1",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.11.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-react": "^7.29.4",
    "eslint-plugin-react-hooks": "^4.3.0",
    "fork-ts-checker-webpack-plugin": "^7.2.1",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^7.0.4",
    "jest-styled-components": "^7.0.8",
    "jest-watch-typeahead": "^1.0.0",
    "lint-staged": "^12.3.5",
    "prettier": "^2.5.1",
    "react-refresh": "^0.12.0",
    "typescript": "^4.6.2",
    "webpack": "^5.70.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.2",
    "webpack-dev-server": "^4.7.4"
  },
  "dependencies": {
    "@reduxjs/toolkit": "^1.8.0",
    "axios": "^0.26.1",
    "i18next": "^21.6.14",
    "i18next-browser-languagedetector": "^6.1.3",
    "jest": "^27.5.1",
    "prop-types": "^15.8.1",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-helmet-async": "^1.2.3",
    "react-i18next": "^11.15.7",
    "react-redux": "^7.2.6",
    "react-router-dom": "^6.2.2",
    "redux-logger": "^3.0.6",
    "redux-saga": "^1.1.3",
    "styled-components": "^5.3.3",
    "web-vitals": "^2.1.4"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write",
      "jest --bail --findRelatedTests"
    ],
    "*.{md,json,yml,yaml}": [
      "prettier --write"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 opera version",
      "last 1 edge version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src"
    ],
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx,js,jsx}",
      "!src/**/*/Loadable.{ts,tsx,js,jsx}",
      "!src/**/*/*.d.ts",
      "!src/interfaces/*.ts",
      "!src/store/*.ts",
      "!src/styles/cssReset/*.ts",
      "!src/styles/globalStyle.ts",
      "!src/index.tsx",
      "!src/reportWebVitals.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    },
    "setupFilesAfterEnv": [
      "<rootDir>/src/setupTests.ts"
    ],
    "modulePathIgnorePatterns": [
      "__mocks__"
    ],
    "testEnvironment": "jsdom",
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.{ts,tsx,js,jsx}",
      "<rootDir>/src/**/*.{spec,test}.{ts,tsx,js,jsx}"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/config/jest/__mocks__/fileMock.ts",
      "^assets/(.*)$": "<rootDir>/src/app/assets/$1",
      "^components/(.*)$": "<rootDir>/src/app/components/$1",
      "^hooks$": "<rootDir>/src/app/hooks",
      "^interfaces$": "<rootDir>/src/app/interfaces",
      "^pages/(.*)$": "<rootDir>/src/app/pages/$1",
      "^lib/(.*)$": "<rootDir>/src/lib/$1",
      "^locales/(.*)$": "<rootDir>/src/locales/$1",
      "^services/(.*)$": "<rootDir>/src/services/$1",
      "^store/(.*)$": "<rootDir>/src/store/$1",
      "^styles$": "<rootDir>/src/styles",
      "^styles/(.*)$": "<rootDir>/src/styles/$1",
      "^utils$": "<rootDir>/src/utils"
    },
    "watchPlugins": [
      "jest-watch-typeahead/filename",
      "jest-watch-typeahead/testname"
    ],
    "resetMocks": true
  }
}
